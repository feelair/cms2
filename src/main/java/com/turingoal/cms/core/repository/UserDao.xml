<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.3//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.turingoal.cms.core.repository.UserDao">
    
    <!-- 修改 User密码 -->
    <update id="updateUserPass" parameterType="map">
        UPDATE tg_c_user 
            SET user_pass = #{userPass}
        WHERE id = #{id}
    </update>
    
    <!-- 通过用户名和密码返回一个 User-->
    <select id="login" parameterType="map" resultType="com.turingoal.cms.core.domain.User">
        SELECT * FROM tg_c_user WHERE username = #{username} AND user_pass = #{userPass}
    </select>
    
    <!-- 通过Username得到一个 User-->
    <select id="getByUsername" parameterType="string" resultType="com.turingoal.cms.core.domain.User">
        SELECT * FROM tg_c_user WHERE username = #{username}
    </select>
    
    <!-- 通过Username得到一个 UserId-->
    <select id="getIdByUsername" parameterType="string" resultType="string">
        SELECT id FROM tg_c_user WHERE username = #{username}
    </select>
    
    <!-- 查询 User -->
    <select id="find" parameterType="com.turingoal.cms.core.domain.query.UserQuery" resultType="com.turingoal.cms.core.domain.User">
        SELECT * FROM tg_c_user 
        <if test="simpleQueryParam != null and simpleQueryParam!=''">  
            WHERE username LIKE CONCAT('%',#{simpleQueryParam},'%')
            OR realname LIKE CONCAT('%',#{simpleQueryParam},'%')
            OR telephone_number LIKE CONCAT('%',#{simpleQueryParam},'%')
            OR email LIKE CONCAT('%',#{simpleQueryParam},'%')
        </if>  
         ORDER BY enabled ASC, username ASC
    </select>
    
    <!-- 通过id得到一个 User-->
    <select id="get" parameterType="string" resultType="com.turingoal.cms.core.domain.User">
        SELECT * FROM tg_c_user WHERE id = #{id}
    </select>
    
    <!-- 新增 User -->
    <insert id="add" parameterType="com.turingoal.cms.core.domain.form.UserForm">
        INSERT INTO tg_c_user (
            id, username, realname, user_pass, gender, birthday, 
            id_card_num, cellphone_number, telephone_number, email,
            create_data_time, create_data_username
        )
        VALUES(
            #{id}, #{username}, #{realname}, #{userPass}, #{gender}, #{birthday}, 
            #{idCardNum}, #{cellphoneNumber}, #{telephoneNumber}, #{email},
            #{createDataTime}, #{createDataUsername}
        )
    </insert>
    
    <!-- 修改 User -->
    <update id="update" parameterType="com.turingoal.cms.core.domain.form.UserForm">
        UPDATE tg_c_user SET
            realname = #{realname}, gender = #{gender}, birthday = #{birthday}, 
            id_card_num = #{idCardNum}, cellphone_number = #{cellphoneNumber}, telephone_number = #{telephoneNumber}, email = #{email},
            update_data_time = #{updateDataTime},
            update_data_username = #{updateDataUsername}
        WHERE id = #{id} AND editable = 1
    </update>
    
    <!-- 修改当前 User -->
    <update id="updateCurrentUser" parameterType="com.turingoal.cms.core.domain.form.UserForm">
        UPDATE tg_c_user SET
            gender = #{gender}, birthday = #{birthday}, 
            cellphone_number = #{cellphoneNumber}, telephone_number = #{telephoneNumber}, email = #{email},
            update_data_time = #{updateDataTime},
            update_data_username = #{updateDataUsername}
        WHERE id = #{id}
    </update>
    
    <!-- 修改 User登录信息 -->
    <update id="updateUserLoginInfo" parameterType="com.turingoal.cms.core.domain.form.UserForm">
        UPDATE tg_c_user SET
            pre_login_time =last_login_time, pre_login_ip = last_login_ip,
            last_login_time = #{lastLoginTime}, last_login_ip = #{lastLoginIp}
        WHERE id = #{id}
    </update>
    
    <!-- 修改 User退出信息 -->
    <update id="updateUserLogoutInfo" parameterType="com.turingoal.cms.core.domain.form.UserForm">
        UPDATE tg_c_user SET
            last_logout_time = #{lastLogoutTime}
        WHERE id = #{id}
    </update>

    <!-- 根据id删除一个 User -->
    <delete id="delete" parameterType="string">
        DELETE FROM tg_c_user WHERE id = #{id} AND editable = 1 AND username != 'admin'
    </delete>
    
    <!-- 修改是否可用-->
    <update id="changeEnabled">
        UPDATE tg_c_user SET enabled = #{enabled} WHERE id = #{id} AND editable = 1 AND username != 'admin'
    </update>
    
    <!-- 检测数据是否可编辑 -->
    <select id="checkEditable" parameterType="string" resultType="int">
        SELECT editable FROM tg_c_user WHERE id = #{id}
    </select>
</mapper>
